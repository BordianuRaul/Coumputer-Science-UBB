     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fclose, fprintf, printf, scanf                ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll   ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import fprintf msvcrt.dll
    12                                  import printf msvcrt.dll
    13                                  import scanf msvcrt.dll                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17                                      ; 1.Sa se citeasca de la tastatura un numar n, apoi sa se citeasca mai multe cuvinte, pana cand se citeste cuvantul/caracterul "#". Sa se scrie intr-un fisier text toate cuvintele citite care incep si se termina
    18 00000000 00000000                    n dd 0
    19 00000004 6E203D2000                  format_print_n db "n = ",0
    20 00000009 256400                      format_read_n db "%d",0
    21 0000000C 6F75747075742E7478-         filename db "output.txt",0
    21 00000015 7400               
    22 00000017 FFFFFFFF                    file_descriptor dd -1
    23 0000001B 7700                        access_mode db "w",0
    24 0000001D 257300                      format_read_string db "%s",0
    25 00000020 257300                      format_print_string db "%s", 0
    26 00000023 <res 00000064>              string resb 100
    27                                      
    28                                  ; our code starts here
    29                                  segment code use32 class=code
    30                                      start:
    31                                          ; 
    32                                          
    33 00000000 68[04000000]                    push dword format_print_n
    34 00000005 FF15[00000000]                  call [printf]
    35 0000000B 83C404                          add esp, 4
    36                                          
    37 0000000E 68[00000000]                    push dword n
    38 00000013 68[09000000]                    push dword format_read_n
    39 00000018 FF15[00000000]                  call [scanf]
    40 0000001E 83C408                          add esp, 4 * 2
    41                                          
    42                                          ;Open FILE
    43                                          
    44 00000021 68[1B000000]                    push dword access_mode
    45 00000026 68[0C000000]                    push dword filename
    46 0000002B FF15[00000000]                  call [fopen]
    47 00000031 83C408                          add esp, 4 * 2
    48                                          
    49 00000034 83F800                          cmp eax, 0
    50 00000037 747E                            je final
    51                                          
    52 00000039 A3[17000000]                    mov [file_descriptor], eax
    53                                          
    54                                          while:
    55                                          
    56 0000003E 68[23000000]                        push dword string
    57 00000043 68[1D000000]                        push dword format_read_string
    58 00000048 FF15[00000000]                      call [scanf]
    59 0000004E 83C408                              add esp, 4 * 2
    60                                              
    61 00000051 BE00000000                          mov ESI, 0
    62                                              
    63 00000056 8A86[23000000]                      mov AL, [string + esi]
    64 0000005C B323                                mov BL, "#"
    65                                              
    66 0000005E 38D8                                cmp AL, BL
    67                                              
    68 00000060 7446                                je break
    69                                              
    70 00000062 8A96[23000000]                      mov DL, [string + esi]
    71                                              
    72 00000068 B901000000                          mov ECX, 1
    73                                              
    74                                              parse_string:
    75                                                  
    76 0000006D 8AB6[23000000]                          mov DH, [string + esi]
    77                                                  
    78 00000073 46                                      inc esi
    79                                                  
    80 00000074 8A86[23000000]                          mov AL, [string + esi]
    81                                                  
    82 0000007A 3C00                                    cmp AL, 0
    83                                                  
    84 0000007C 7403                                    je break_parse
    85                                                  
    86 0000007E 41                                      inc ECX
    87                                                  
    88 0000007F EBEC                                jmp parse_string
    89                                              
    90                                              break_parse:
    91                                              
    92 00000081 3B0D[00000000]                      cmp ECX, [n]
    93                                              
    94 00000087 751D                                jne dont_add
    95                                              
    96 00000089 38F2                                cmp DL, DH
    97                                              
    98 0000008B 7519                                jne dont_add
    99                                              
   100 0000008D 68[23000000]                        push dword string
   101 00000092 68[20000000]                        push dword format_print_string
   102 00000097 FF35[17000000]                      push dword [file_descriptor]
   103 0000009D FF15[00000000]                      call [fprintf]
   104 000000A3 83C40C                              add esp, 4 * 3
   105                                              
   106                                              dont_add:
   107                                              
   108 000000A6 EB96                            jmp while
   109                                          
   110                                          break:
   111                                          
   112                                          ;Close file
   113                                          
   114 000000A8 FF35[17000000]                  push dword [file_descriptor]
   115 000000AE FF15[00000000]                  call [fclose]
   116 000000B4 83C404                          add esp, 4
   117                                          
   118                                          ;Close file
   119                                          
   120                                          final:
   121                                      
   122                                          ; exit(0)
   123 000000B7 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   124 000000B9 FF15[00000000]                  call    [exit]       ; call exit to terminate the program

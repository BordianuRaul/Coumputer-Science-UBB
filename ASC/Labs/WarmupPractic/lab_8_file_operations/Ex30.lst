     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fclose, scanf, fprintf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import scanf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    12                                  import fprintf msvcrt.dll                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; A file name (defined in data segment) is given. Create a file with the given name, then read words from the keyboard until character '$' is read from the keyboard. Write only the words that contain at least on
    17                                      
    18 00000000 6F75747075742E7478-         filename db "output.txt",0
    18 00000009 7400               
    19 0000000B FFFFFFFF                    file_descriptor dd -1
    20 0000000F 7700                        acces_mode db "w",0
    21 00000011 257300                      format_read db "%s",0
    22 00000014 257300                      format_print db "%s",0
    23 00000017 <res 00000064>              string resb 100
    24                                      
    25                                      
    26                                  
    27                                  ; our code starts here
    28                                  segment code use32 class=code
    29                                      start:
    30                                          ; 
    31                                          
    32                                          ;OPEN FILE
    33                                          
    34 00000000 68[0F000000]                    push dword acces_mode
    35 00000005 68[00000000]                    push dword filename
    36 0000000A FF15[00000000]                  call [fopen]
    37 00000010 83C408                          add ESP, 4 * 2
    38                                  
    39                                          
    40 00000013 83F800                          cmp EAX, 0
    41                                          
    42 00000016 A3[0B000000]                    mov [file_descriptor], EAX
    43                                          
    44 0000001B 7467                            je final
    45                                          
    46                                          ;OPEN FILE
    47                                          
    48                                          while:
    49                                              
    50 0000001D 68[17000000]                        push dword string
    51 00000022 68[11000000]                        push dword format_read
    52 00000027 FF15[00000000]                      call [scanf]
    53 0000002D 83C408                              add ESP, 4 * 2
    54                                              
    55 00000030 BE00000000                          mov ESI, 0
    56                                              
    57 00000035 8A86[17000000]                      mov AL, [string + ESI]
    58                                              
    59 0000003B 3C24                                cmp AL, "$"
    60                                              
    61 0000003D 7436                                je break
    62                                              
    63                                              parse_word:
    64                                                  
    65 0000003F 8A86[17000000]                          mov AL, [string + ESI]
    66                                                  
    67 00000045 3C00                                    cmp AL, 0
    68                                                  
    69 00000047 742A                                    je break_parse
    70                                                  
    71 00000049 B330                                    mov BL, "0"
    72                                                  
    73 0000004B 38D8                                    cmp AL, BL:
    74                                                  
    75 0000004D 7221                                    jb dont_add
    76                                                  
    77 0000004F B339                                    mov BL, "9"
    78                                                  
    79 00000051 38D8                                    cmp AL, BL:
    80                                                  
    81 00000053 771B                                    ja dont_add
    82                                                  
    83 00000055 68[17000000]                            push dword string
    84 0000005A 68[14000000]                            push dword format_print
    85 0000005F FF35[0B000000]                          push dword [file_descriptor]
    86 00000065 FF15[00000000]                          call [fprintf]
    87 0000006B 83C40C                                  add ESP, 4 * 3
    88                                                  
    89 0000006E EB03                                    jmp break_parse
    90                                                  
    91                                                  
    92                                                  dont_add:
    93                                                  
    94 00000070 46                                      inc ESI
    95                                                  
    96 00000071 EBCC                                jmp parse_word
    97                                              
    98                                              break_parse:
    99                                          
   100 00000073 EBA8                            jmp while
   101                                          
   102                                          break:
   103                                          
   104                                          ;CLOSE FILE
   105                                          
   106 00000075 FF35[0B000000]                  push dword [file_descriptor]
   107 0000007B FF15[00000000]                  call [fclose]
   108 00000081 83C404                          add ESP, 4
   109                                          
   110                                          ;CLOSE FILE
   111                                          
   112                                          final:
   113                                      
   114                                          ; exit(0)
   115 00000084 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   116 00000086 FF15[00000000]                  call    [exit]       ; call exit to terminate the program

     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; (a+b)/(c-2)-d+2-x; a,b,c-byte; d-doubleword; x-qword
    14                                      
    15 00000000 FB                          a db -5
    16 00000001 F6                          b db -10
    17 00000002 FD                          c db -3
    18 00000003 30F8FFFF                    d dd -2000
    19 00000007 78ECFFFFFFFFFFFF            x dq -5000
    20                                      
    21                                      
    22                                  
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26                                          ; ...
    27                                          
    28 00000000 A0[00000000]                    mov AL, [a]
    29 00000005 8A1D[01000000]                  mov BL, [b]
    30                                          
    31 0000000B 00D8                            add AL, BL
    32                                          
    33 0000000D 8A0D[02000000]                  mov CL, [c]
    34                                          
    35 00000013 80E902                          sub CL, byte 2
    36                                          
    37 00000016 6698                            cbw
    38                                          
    39 00000018 F6F9                            idiv CL
    40                                          
    41                                          ;AL = (a+b)/(c-2)
    42                                          
    43 0000001A 6698                            cbw
    44 0000001C 98                              cwde
    45                                          
    46 0000001D 8B15[03000000]                  mov EDX, [d]
    47                                          
    48 00000023 19D0                            sbb EAX, EDX
    49                                          
    50 00000025 83C002                          add EAX, dword 2
    51                                          
    52 00000028 99                              cdq
    53                                          
    54 00000029 8B1D[07000000]                  mov EBX, [x]
    55 0000002F 8B0D[0B000000]                  mov ECX, [x + 4]
    56                                          
    57 00000035 29CA                            sub EDX, ECX
    58 00000037 29D8                            sub EAX, EBX
    59                                      
    60                                          ; exit(0)
    61 00000039 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    62 0000003B FF15[00000000]                  call    [exit]       ; call exit to terminate the program

-------ID = 1-------: 
int v;Reference: int
 a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v;Reference: int
 a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int v
Reference: int
 a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
Reference: int
 a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int v
Reference: int
 a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
Reference: int
 a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
Reference: int
 a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
Reference: int
 a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
Reference: int
 a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
Reference: int
 a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
Reference: int
 a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
Reference: int
 a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
Reference: int
 a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
Reference: int
 a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 1-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 1-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 1-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 1-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 2-------: 
write heap(30);v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30);v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 1-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 2-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 1-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 2-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 1-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 2-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 1-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 2-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 1-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 2-------: 
v=32
print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 1-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 2-------: 
v=32
print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 2-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 32


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 2-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 32


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 2-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 32


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 2-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 32


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 2-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 32


-------Output List-------: 
10
30
32


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 2-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 32


-------Output List-------: 
10
30
32


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 1 int
v -> 32


-------Output List-------: 
10
30
32
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 1-------: 
int v;v=2;print( v )


-------Execution Stack-------: 
int v;v=2;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int v
v=2;print( v )


-------Execution Stack-------: 
int v
v=2;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int v
v=2;print( v )


-------Execution Stack-------: 
int v
v=2;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int v
v=2;print( v )


-------Execution Stack-------: 
int v
v=2;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2;print( v )


-------Execution Stack-------: 
v=2;print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2;print( v )


-------Execution Stack-------: 
v=2;print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2;print( v )


-------Execution Stack-------: 
v=2;print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2
print( v )


-------Execution Stack-------: 
v=2
print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2
print( v )


-------Execution Stack-------: 
v=2
print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2
print( v )


-------Execution Stack-------: 
v=2
print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
print( v )


-------Execution Stack-------: 
print( v )


-------Symbol Table-------: 
v -> 2


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
print( v )


-------Execution Stack-------: 
print( v )


-------Symbol Table-------: 
v -> 2


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
print( v )


-------Execution Stack-------: 
print( v )


-------Symbol Table-------: 
v -> 2


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
v -> 2


-------Output List-------: 
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
v -> 2


-------Output List-------: 
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int a;int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int a;int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1);print( b )


-------Execution Stack-------: 
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1);print( b )


-------Execution Stack-------: 
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1);print( b )


-------Execution Stack-------: 
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1)
print( b )


-------Execution Stack-------: 
b=(a + 1)
print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1)
print( b )


-------Execution Stack-------: 
b=(a + 1)
print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1)
print( b )


-------Execution Stack-------: 
b=(a + 1)
print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
print( b )


-------Execution Stack-------: 
print( b )


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
print( b )


-------Execution Stack-------: 
print( b )


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
print( b )


-------Execution Stack-------: 
print( b )


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 
18


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 
18


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
bool a;int v;a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
bool a;int v;a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
bool a
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
bool a
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
bool a
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
bool a
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
bool a
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
bool a
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
int v
a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
int v
a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
int v
a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
int v
a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
int v
a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
int v
a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
a=true
if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
a=true
if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
a=true
if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
a=true
if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
a=true
if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
a=true
if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> true
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> true
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> true
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
if(a) then v=2 else v=3
print( v )


-------Execution Stack-------: 
if(a) then v=2 else v=3
print( v )


-------Symbol Table-------: 
a -> true
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
if(a) then v=2 else v=3
print( v )


-------Execution Stack-------: 
if(a) then v=2 else v=3
print( v )


-------Symbol Table-------: 
a -> true
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
if(a) then v=2 else v=3
print( v )


-------Execution Stack-------: 
if(a) then v=2 else v=3
print( v )


-------Symbol Table-------: 
a -> true
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
v=2
print( v )


-------Execution Stack-------: 
v=2
print( v )


-------Symbol Table-------: 
a -> true
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
v=2
print( v )


-------Execution Stack-------: 
v=2
print( v )


-------Symbol Table-------: 
a -> true
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
v=2
print( v )


-------Execution Stack-------: 
v=2
print( v )


-------Symbol Table-------: 
a -> true
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
print( v )


-------Execution Stack-------: 
print( v )


-------Symbol Table-------: 
a -> true
v -> 2


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
print( v )


-------Execution Stack-------: 
print( v )


-------Symbol Table-------: 
a -> true
v -> 2


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
print( v )


-------Execution Stack-------: 
print( v )


-------Symbol Table-------: 
a -> true
v -> 2


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> true
v -> 2


-------Output List-------: 
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> true
v -> 2


-------Output List-------: 
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
int reference v;new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference v;new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
int reference v
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference v
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
int reference v
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference v
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
int reference v
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference v
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
new(v,20)
int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(v,20)
int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
new(v,20)
int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(v,20)
int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
new(v,20)
int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(v,20)
int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
int reference reference a
new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference reference a
new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
int reference reference a
new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference reference a
new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
int reference reference a
new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference reference a
new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(a,v);print( v );print( a )


-------Symbol Table-------: 
a -> 0 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(a,v);print( v );print( a )


-------Symbol Table-------: 
a -> 0 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(a,v);print( v );print( a )


-------Symbol Table-------: 
a -> 0 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
new(a,v)
print( v );print( a )


-------Execution Stack-------: 
new(a,v)
print( v );print( a )


-------Symbol Table-------: 
a -> 0 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
new(a,v)
print( v );print( a )


-------Execution Stack-------: 
new(a,v)
print( v );print( a )


-------Symbol Table-------: 
a -> 0 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
new(a,v)
print( v );print( a )


-------Execution Stack-------: 
new(a,v)
print( v );print( a )


-------Symbol Table-------: 
a -> 0 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
print( v );print( a )


-------Execution Stack-------: 
print( v );print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( v );print( a )


-------Execution Stack-------: 
print( v );print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( v );print( a )


-------Execution Stack-------: 
print( v );print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( v )
print( a )


-------Execution Stack-------: 
print( v )
print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( v )
print( a )


-------Execution Stack-------: 
print( v )
print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( v )
print( a )


-------Execution Stack-------: 
print( v )
print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( a )


-------Execution Stack-------: 
print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 
1 int


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( a )


-------Execution Stack-------: 
print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 
1 int


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( a )


-------Execution Stack-------: 
print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 
1 int


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 
1 int
2 int reference


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 
1 int
2 int reference


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 5-------: 
int v;v=4;while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
int v;v=4;while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
int v
v=4;while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
int v
v=4;while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
int v
v=4;while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
int v
v=4;while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
int v
v=4;while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
int v
v=4;while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
v=4;while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
v=4;while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
v=4;while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
v=4;while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
v=4;while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
v=4;while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
v=4
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
v=4
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
v=4
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
v=4
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
v=4
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
v=4
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 4


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 4


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 4


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 4


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 4


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 4


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 4


-------Output List-------: 
4


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 4


-------Output List-------: 
4


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 4


-------Output List-------: 
4


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 3


-------Output List-------: 
4


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 3


-------Output List-------: 
4


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 3


-------Output List-------: 
4


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 3


-------Output List-------: 
4


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 3


-------Output List-------: 
4


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 3


-------Output List-------: 
4


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 3


-------Output List-------: 
4
3


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 3


-------Output List-------: 
4
3


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 3


-------Output List-------: 
4
3


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 2


-------Output List-------: 
4
3


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 2


-------Output List-------: 
4
3


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 2


-------Output List-------: 
4
3


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 2


-------Output List-------: 
4
3


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 2


-------Output List-------: 
4
3


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 2


-------Output List-------: 
4
3


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 2


-------Output List-------: 
4
3
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 2


-------Output List-------: 
4
3
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 2


-------Output List-------: 
4
3
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 1


-------Output List-------: 
4
3
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 1


-------Output List-------: 
4
3
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 1


-------Output List-------: 
4
3
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 1


-------Output List-------: 
4
3
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 1


-------Output List-------: 
4
3
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
print( v )
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 1


-------Output List-------: 
4
3
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 1


-------Output List-------: 
4
3
2
1


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 1


-------Output List-------: 
4
3
2
1


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
v=(v - 1)
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 1


-------Output List-------: 
4
3
2
1


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 0


-------Output List-------: 
4
3
2
1


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 0


-------Output List-------: 
4
3
2
1


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Execution Stack-------: 
while( ( v > 0 )) print( v );v=(v - 1)



-------Symbol Table-------: 
v -> 0


-------Output List-------: 
4
3
2
1


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
4
3
2
1


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 5-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
4
3
2
1


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v;int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v;int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 7-------: 
write heap(30);v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30);v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 7-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 7-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 7-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 7-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 6-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 7-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 6-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 7-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 6-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 7-------: 
v=32
print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 6-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 7-------: 
v=32
print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 6-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 2-------: 
int a;int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int a;int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1);print( b )


-------Execution Stack-------: 
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1);print( b )


-------Execution Stack-------: 
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1);print( b )


-------Execution Stack-------: 
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1)
print( b )


-------Execution Stack-------: 
b=(a + 1)
print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1)
print( b )


-------Execution Stack-------: 
b=(a + 1)
print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1)
print( b )


-------Execution Stack-------: 
b=(a + 1)
print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
print( b )


-------Execution Stack-------: 
print( b )


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
print( b )


-------Execution Stack-------: 
print( b )


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
print( b )


-------Execution Stack-------: 
print( b )


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 
18


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 
18


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int v;v=2;print( v )


-------Execution Stack-------: 
int v;v=2;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int v
v=2;print( v )


-------Execution Stack-------: 
int v
v=2;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int v
v=2;print( v )


-------Execution Stack-------: 
int v
v=2;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int v
v=2;print( v )


-------Execution Stack-------: 
int v
v=2;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2;print( v )


-------Execution Stack-------: 
v=2;print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2;print( v )


-------Execution Stack-------: 
v=2;print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2;print( v )


-------Execution Stack-------: 
v=2;print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2
print( v )


-------Execution Stack-------: 
v=2
print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2
print( v )


-------Execution Stack-------: 
v=2
print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2
print( v )


-------Execution Stack-------: 
v=2
print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
print( v )


-------Execution Stack-------: 
print( v )


-------Symbol Table-------: 
v -> 2


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
print( v )


-------Execution Stack-------: 
print( v )


-------Symbol Table-------: 
v -> 2


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
print( v )


-------Execution Stack-------: 
print( v )


-------Symbol Table-------: 
v -> 2


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
v -> 2


-------Output List-------: 
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
v -> 2


-------Output List-------: 
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
int reference v;new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference v;new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
int reference v
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference v
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
int reference v
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference v
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
int reference v
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference v
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
new(v,20)
int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(v,20)
int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
new(v,20)
int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(v,20)
int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
new(v,20)
int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(v,20)
int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
int reference reference a
new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference reference a
new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
int reference reference a
new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference reference a
new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
int reference reference a
new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference reference a
new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(a,v);print( v );print( a )


-------Symbol Table-------: 
a -> 0 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(a,v);print( v );print( a )


-------Symbol Table-------: 
a -> 0 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(a,v);print( v );print( a )


-------Symbol Table-------: 
a -> 0 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
new(a,v)
print( v );print( a )


-------Execution Stack-------: 
new(a,v)
print( v );print( a )


-------Symbol Table-------: 
a -> 0 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
new(a,v)
print( v );print( a )


-------Execution Stack-------: 
new(a,v)
print( v );print( a )


-------Symbol Table-------: 
a -> 0 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
new(a,v)
print( v );print( a )


-------Execution Stack-------: 
new(a,v)
print( v );print( a )


-------Symbol Table-------: 
a -> 0 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
print( v );print( a )


-------Execution Stack-------: 
print( v );print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( v );print( a )


-------Execution Stack-------: 
print( v );print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( v );print( a )


-------Execution Stack-------: 
print( v );print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( v )
print( a )


-------Execution Stack-------: 
print( v )
print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( v )
print( a )


-------Execution Stack-------: 
print( v )
print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( v )
print( a )


-------Execution Stack-------: 
print( v )
print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( a )


-------Execution Stack-------: 
print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 
1 int


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( a )


-------Execution Stack-------: 
print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 
1 int


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( a )


-------Execution Stack-------: 
print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 
1 int


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 
1 int
2 int reference


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 
1 int
2 int reference


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 1-------: 
int v;v=2;print( v )


-------Execution Stack-------: 
int v;v=2;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int v
v=2;print( v )


-------Execution Stack-------: 
int v
v=2;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int v
v=2;print( v )


-------Execution Stack-------: 
int v
v=2;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int v
v=2;print( v )


-------Execution Stack-------: 
int v
v=2;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2;print( v )


-------Execution Stack-------: 
v=2;print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2;print( v )


-------Execution Stack-------: 
v=2;print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2;print( v )


-------Execution Stack-------: 
v=2;print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2
print( v )


-------Execution Stack-------: 
v=2
print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2
print( v )


-------Execution Stack-------: 
v=2
print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2
print( v )


-------Execution Stack-------: 
v=2
print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
print( v )


-------Execution Stack-------: 
print( v )


-------Symbol Table-------: 
v -> 2


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
print( v )


-------Execution Stack-------: 
print( v )


-------Symbol Table-------: 
v -> 2


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
print( v )


-------Execution Stack-------: 
print( v )


-------Symbol Table-------: 
v -> 2


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
v -> 2


-------Output List-------: 
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
v -> 2


-------Output List-------: 
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v;int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v;int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 7-------: 
write heap(30);v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30);v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 7-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 7-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 7-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 7-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 7-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 7-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 7-------: 
v=32
print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 7-------: 
v=32
print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 2-------: 
int a;int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int a;int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1);print( b )


-------Execution Stack-------: 
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1);print( b )


-------Execution Stack-------: 
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1);print( b )


-------Execution Stack-------: 
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1)
print( b )


-------Execution Stack-------: 
b=(a + 1)
print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1)
print( b )


-------Execution Stack-------: 
b=(a + 1)
print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1)
print( b )


-------Execution Stack-------: 
b=(a + 1)
print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
print( b )


-------Execution Stack-------: 
print( b )


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
print( b )


-------Execution Stack-------: 
print( b )


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
print( b )


-------Execution Stack-------: 
print( b )


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 
18


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 
18


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
bool a;int v;a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
bool a;int v;a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
bool a
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
bool a
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
bool a
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
bool a
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
bool a
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
bool a
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
int v;a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
int v
a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
int v
a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
int v
a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
int v
a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
int v
a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
int v
a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
a=true;if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
a=true;if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
a=true
if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
a=true
if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
a=true
if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
a=true
if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
a=true
if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
a=true
if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> false
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> true
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> true
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
if(a) then v=2 else v=3;print( v )


-------Execution Stack-------: 
if(a) then v=2 else v=3;print( v )


-------Symbol Table-------: 
a -> true
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
if(a) then v=2 else v=3
print( v )


-------Execution Stack-------: 
if(a) then v=2 else v=3
print( v )


-------Symbol Table-------: 
a -> true
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
if(a) then v=2 else v=3
print( v )


-------Execution Stack-------: 
if(a) then v=2 else v=3
print( v )


-------Symbol Table-------: 
a -> true
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
if(a) then v=2 else v=3
print( v )


-------Execution Stack-------: 
if(a) then v=2 else v=3
print( v )


-------Symbol Table-------: 
a -> true
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
v=2
print( v )


-------Execution Stack-------: 
v=2
print( v )


-------Symbol Table-------: 
a -> true
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
v=2
print( v )


-------Execution Stack-------: 
v=2
print( v )


-------Symbol Table-------: 
a -> true
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
v=2
print( v )


-------Execution Stack-------: 
v=2
print( v )


-------Symbol Table-------: 
a -> true
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
print( v )


-------Execution Stack-------: 
print( v )


-------Symbol Table-------: 
a -> true
v -> 2


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
print( v )


-------Execution Stack-------: 
print( v )


-------Symbol Table-------: 
a -> true
v -> 2


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 
print( v )


-------Execution Stack-------: 
print( v )


-------Symbol Table-------: 
a -> true
v -> 2


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> true
v -> 2


-------Output List-------: 
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> true
v -> 2


-------Output List-------: 
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v;int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v;int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 7-------: 
write heap(30);v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30);v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 7-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 7-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 7-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 7-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 7-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 7-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 7-------: 
v=32
print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 7-------: 
v=32
print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 
int v;int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v;int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 7-------: 
write heap(30);v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30);v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 7-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 7-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 7-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 7-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 7-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 7-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 7-------: 
v=32
print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 7-------: 
v=32
print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' );int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' );int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0
-1


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0
-1


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0
-1


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v;int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v;int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 8-------: 
write heap(30);v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30);v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 8-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 8-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 8-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 6-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=22}

########################################################################


-------ID = 8-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 8-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 8-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 8-------: 
v=32
print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 8-------: 
v=32
print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 6-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 1 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{1=30}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' );int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' );int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' );int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' );int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0
-1


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0
-1


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 
0
-1


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' );int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' );int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20
300


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20
300


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20
300


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20
300


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20
300


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' );int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' );int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20
300


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20
300


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20
300


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20
300


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20
300


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' );int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' );int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
openFile( ' ex7.in ' )
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v;readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
int v
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v );if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 );closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
if(v>=2) then readFile( ' ex7.in ' );print( v ) else print( -1 )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' );print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' );print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
readFile( ' ex7.in ' )
print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
readFile( ' ex7.in ' )
print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 20


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
print( v )
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
print( v )
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20
300


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20
300


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 
closeFile( ' ex7.in ' )


-------Execution Stack-------: 
closeFile( ' ex7.in ' )


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20
300


-------FileTable List-------: 
 ' ex7.in '  -> java.io.BufferedReader@34fcf9bc


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20
300


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 7-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
v -> 300


-------Output List-------: 
20
300


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int a;int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int a;int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int a
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b;a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
int b
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5));b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Execution Stack-------: 
a=(2 + (3 * 5))
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 0
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1);print( b )


-------Execution Stack-------: 
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1);print( b )


-------Execution Stack-------: 
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1);print( b )


-------Execution Stack-------: 
b=(a + 1);print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1)
print( b )


-------Execution Stack-------: 
b=(a + 1)
print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1)
print( b )


-------Execution Stack-------: 
b=(a + 1)
print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
b=(a + 1)
print( b )


-------Execution Stack-------: 
b=(a + 1)
print( b )


-------Symbol Table-------: 
a -> 17
b -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
print( b )


-------Execution Stack-------: 
print( b )


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
print( b )


-------Execution Stack-------: 
print( b )


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 
print( b )


-------Execution Stack-------: 
print( b )


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 
18


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 17
b -> 18


-------Output List-------: 
18


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
int reference v;new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference v;new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
int reference v
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference v
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
int reference v
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference v
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
int reference v
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference v
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(v,20);int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
new(v,20)
int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(v,20)
int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
new(v,20)
int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(v,20)
int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
new(v,20)
int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(v,20)
int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 4-------: 
int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
int reference reference a;new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference reference a;new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
int reference reference a
new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference reference a
new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
int reference reference a
new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference reference a
new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
int reference reference a
new(a,v);print( v );print( a )


-------Execution Stack-------: 
int reference reference a
new(a,v);print( v );print( a )


-------Symbol Table-------: 
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(a,v);print( v );print( a )


-------Symbol Table-------: 
a -> 0 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(a,v);print( v );print( a )


-------Symbol Table-------: 
a -> 0 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
new(a,v);print( v );print( a )


-------Execution Stack-------: 
new(a,v);print( v );print( a )


-------Symbol Table-------: 
a -> 0 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
new(a,v)
print( v );print( a )


-------Execution Stack-------: 
new(a,v)
print( v );print( a )


-------Symbol Table-------: 
a -> 0 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
new(a,v)
print( v );print( a )


-------Execution Stack-------: 
new(a,v)
print( v );print( a )


-------Symbol Table-------: 
a -> 0 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
new(a,v)
print( v );print( a )


-------Execution Stack-------: 
new(a,v)
print( v );print( a )


-------Symbol Table-------: 
a -> 0 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20}

########################################################################


-------ID = 4-------: 
print( v );print( a )


-------Execution Stack-------: 
print( v );print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( v );print( a )


-------Execution Stack-------: 
print( v );print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( v );print( a )


-------Execution Stack-------: 
print( v );print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( v )
print( a )


-------Execution Stack-------: 
print( v )
print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( v )
print( a )


-------Execution Stack-------: 
print( v )
print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( v )
print( a )


-------Execution Stack-------: 
print( v )
print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( a )


-------Execution Stack-------: 
print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 
1 int


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( a )


-------Execution Stack-------: 
print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 
1 int


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 
print( a )


-------Execution Stack-------: 
print( a )


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 
1 int


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 
1 int
2 int reference


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 2 int reference
v -> 1 int


-------Output List-------: 
1 int
2 int reference


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=1 int}

########################################################################


-------ID = 1-------: 
int v;v=2;print( v )


-------Execution Stack-------: 
int v;v=2;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int v
v=2;print( v )


-------Execution Stack-------: 
int v
v=2;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int v
v=2;print( v )


-------Execution Stack-------: 
int v
v=2;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int v
v=2;print( v )


-------Execution Stack-------: 
int v
v=2;print( v )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2;print( v )


-------Execution Stack-------: 
v=2;print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2;print( v )


-------Execution Stack-------: 
v=2;print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2;print( v )


-------Execution Stack-------: 
v=2;print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2
print( v )


-------Execution Stack-------: 
v=2
print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2
print( v )


-------Execution Stack-------: 
v=2
print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
v=2
print( v )


-------Execution Stack-------: 
v=2
print( v )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
print( v )


-------Execution Stack-------: 
print( v )


-------Symbol Table-------: 
v -> 2


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
print( v )


-------Execution Stack-------: 
print( v )


-------Symbol Table-------: 
v -> 2


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
print( v )


-------Execution Stack-------: 
print( v )


-------Symbol Table-------: 
v -> 2


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
v -> 2


-------Output List-------: 
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
v -> 2


-------Output List-------: 
2


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v;int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v;int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int v
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a;v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
int reference a
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10;new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=10
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 0


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22);fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
new(a,22)
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 0 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ));print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Execution Stack-------: 
fork(write heap(30);v=32;print( v );print( read from heap (a) ))
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 8-------: 
write heap(30);v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30);v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
print( v );print( read from heap (a) )


-------Execution Stack-------: 
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 8-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 8-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 8-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
write heap(30)
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 6-------: 
print( v )
print( read from heap (a) )


-------Execution Stack-------: 
print( v )
print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{3=22}

########################################################################


-------ID = 8-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 6-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 8-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 6-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 8-------: 
v=32;print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32;print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 6-------: 
print( read from heap (a) )


-------Execution Stack-------: 
print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 8-------: 
v=32
print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 6-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 8-------: 
v=32
print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 6-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 8-------: 
v=32
print( v );print( read from heap (a) )


-------Execution Stack-------: 
v=32
print( v );print( read from heap (a) )


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 6-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
a -> 3 int
v -> 10


-------Output List-------: 
10
30


-------FileTable List-------: 


-------Heap-------: 
{3=30}

########################################################################


-------ID = 8-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( 11 )


-------Execution Stack-------: 
print( 11 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( 11 )


-------Execution Stack-------: 
print( 11 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( 11 )


-------Execution Stack-------: 
print( 11 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 8 )
print( 100 )


-------Execution Stack-------: 
print( 8 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 8 )
print( 100 )


-------Execution Stack-------: 
print( 8 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 8 )
print( 100 )


-------Execution Stack-------: 
print( 8 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( 11 )


-------Execution Stack-------: 
print( 11 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( 11 )


-------Execution Stack-------: 
print( 11 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( 11 )


-------Execution Stack-------: 
print( 11 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 8 )
print( 100 )


-------Execution Stack-------: 
print( 8 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 8 )
print( 100 )


-------Execution Stack-------: 
print( 8 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 8 )
print( 100 )


-------Execution Stack-------: 
print( 8 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( 11 )


-------Execution Stack-------: 
print( 11 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( 11 )


-------Execution Stack-------: 
print( 11 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( 11 )


-------Execution Stack-------: 
print( 11 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 8 )
print( 100 )


-------Execution Stack-------: 
print( 8 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 8 )
print( 100 )


-------Execution Stack-------: 
print( 8 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 8 )
print( 100 )


-------Execution Stack-------: 
print( 8 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 8-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 8-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 9 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 10 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( 11 )


-------Execution Stack-------: 
print( 11 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( 11 )


-------Execution Stack-------: 
print( 11 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 
print( 11 )


-------Execution Stack-------: 
print( 11 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 8 )
print( 100 )


-------Execution Stack-------: 
print( 8 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 8 )
print( 100 )


-------Execution Stack-------: 
print( 8 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 8 )
print( 100 )


-------Execution Stack-------: 
print( 8 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 11-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 10-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 9-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 8-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
9
30
10
40
11
100
8
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 1-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 1-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 1-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 1-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 1-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 1-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 1-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 1-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 1-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 1-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 1-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 1-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( 2 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 2 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( 2 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 2 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( 2 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 2 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 3-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 3-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 3-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 3-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 3-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( 3 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 3 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( 3 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 3 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( 3 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 3 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 4-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 4-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 4-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 4-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 4-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( 4 )


-------Execution Stack-------: 
print( 4 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( 4 )


-------Execution Stack-------: 
print( 4 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( 4 )


-------Execution Stack-------: 
print( 4 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 1 )
print( 100 )


-------Execution Stack-------: 
print( 1 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 1 )
print( 100 )


-------Execution Stack-------: 
print( 1 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 1 )
print( 100 )


-------Execution Stack-------: 
print( 1 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 1-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 1-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 1-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 1-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 1-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 1-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 1-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 1-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( 2 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 2 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( 2 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 2 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 3-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 3-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 3-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 3-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( 3 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 3 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( 3 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 3 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 4-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 4-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 4-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 4-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( 4 )


-------Execution Stack-------: 
print( 4 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( 4 )


-------Execution Stack-------: 
print( 4 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 1 )
print( 100 )


-------Execution Stack-------: 
print( 1 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 1 )
print( 100 )


-------Execution Stack-------: 
print( 1 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 1-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 1-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 1-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 1-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 1-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 1-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 1-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 1-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( 2 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 2 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( 2 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 2 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 3-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 3-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 3-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 3-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( 3 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 3 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( 3 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 3 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 4-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 4-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 4-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 4-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( 4 )


-------Execution Stack-------: 
print( 4 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( 4 )


-------Execution Stack-------: 
print( 4 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 1 )
print( 100 )


-------Execution Stack-------: 
print( 1 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 1 )
print( 100 )


-------Execution Stack-------: 
print( 1 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1;int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v1
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2;int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v2
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3;int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int reference v3
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt;new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
int cnt
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2);new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v1,2)
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 0 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{}

########################################################################


-------ID = 1-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 1-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3);new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 1-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 1-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v2,3)
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 0 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2}

########################################################################


-------ID = 1-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 1-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4);newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 1-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 1-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
new(v3,4)
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 0 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3}

########################################################################


-------ID = 1-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2));fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
newLatch(cnt,read from heap (v2))
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 0
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))));await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
fork(write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))))
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt);print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10));print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
write heap((read from heap (v1) * 10))
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=2, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) );countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( read from heap (v1) )
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( 2 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 2 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
print( 2 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
print( 2 )
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Execution Stack-------: 
fork(write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 2-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 3-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 3-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10));print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 3-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 3-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
write heap((read from heap (v2) * 10))
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=3, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) );countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( read from heap (v2) )
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt);fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
countDown(cnt)
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( 3 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 3 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
print( 3 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
print( 3 )
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Execution Stack-------: 
fork(write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt))


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 3-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 4-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 4-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10));print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 4-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 4-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
write heap((read from heap (v3) * 10))
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=4}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( read from heap (v3) );countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) );countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( read from heap (v3) )
countDown(cnt)


-------Execution Stack-------: 
print( read from heap (v3) )
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
countDown(cnt)


-------Execution Stack-------: 
countDown(cnt)


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( 4 )


-------Execution Stack-------: 
print( 4 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
await(cnt)
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 
print( 4 )


-------Execution Stack-------: 
print( 4 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 4-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 );countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 );countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Execution Stack-------: 
print( 100 )
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
countDown(cnt);print( 100 )


-------Execution Stack-------: 
countDown(cnt);print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
countDown(cnt)
print( 100 )


-------Execution Stack-------: 
countDown(cnt)
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 1 )
print( 100 )


-------Execution Stack-------: 
print( 1 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 1 )
print( 100 )


-------Execution Stack-------: 
print( 1 )
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 
print( 100 )


-------Execution Stack-------: 
print( 100 )


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


-------ID = 1-------: 


-------Execution Stack-------: 


-------Symbol Table-------: 
cnt -> 1
v1 -> 1 int
v2 -> 2 int
v3 -> 3 int


-------Output List-------: 
20
2
30
3
40
4
100
1
100


-------FileTable List-------: 


-------Heap-------: 
{1=20, 2=30, 3=40}

########################################################################


